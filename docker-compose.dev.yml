version: '3.3'

services:
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - "./frontend/app/src:/app/src"
    expose:
      - 3000
    networks:
      - internal

  reverse_proxy:
    build: reverse_proxy
    restart: always
    ports:
      - "3000:3000"
    networks:
      - internal
    depends_on:
      - frontend
      - backend

  backend:
    build:
      context: backend
      dockerfile: Dockerfile.dev

    restart: always
    volumes:
      - "./backend/app/src:/app/src"
      - "avatar:/srv/uploads/avatar"

    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      FT_CLIENT_ID: ${FT_CLIENT_ID}
      FT_CLIENT_SECRET: ${FT_CLIENT_SECRET}
      FT_REDIRECT_URL: ${FT_REDIRECT_URL}
      BASE_URL: ${BASE_URL}
      AVATAR_API: ${AVATAR_API}
      AVATAR_SAVE: ${AVATAR_SAVE}

    expose:
      - 3000

    depends_on:
      - database

    networks:
      - internal

  database:
    build:
      context: db
      dockerfile: Dockerfile

    restart: always

    expose:
      - 5432

    volumes:
      - "database:/var/lib/postgresql/data"

    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PASSWORD: ${DB_PASSWORD}

    networks:
      - internal

volumes:
  database:
  avatar:


networks:
  internal:
